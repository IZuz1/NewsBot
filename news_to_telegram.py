import requests
import schedule
import time
import os
import pytz
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

PERPLEXITY_API_KEY = os.getenv('PERPLEXITY_API_KEY')
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')

class NewsBot:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ—Ç–æ–≤—ã—Ö —Å–µ–∫—Ü–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π –≤ Telegram."""

    def __init__(self, telegram_token, telegram_chat_id):
        self.telegram_token = telegram_token
        self.telegram_chat_id = telegram_chat_id
        self.telegram_url = f"https://api.telegram.org/bot{self.telegram_token}/sendMessage"

    def format_telegram_message(self, sections, channel_tag="@nyannews_summary"):
        """
        sections ‚Äî —Å–ø–∏—Å–æ–∫: [{"emoji": "...", "title": "...", "entries": [—Å—Ç—Ä–æ–∫–∏]}]
        –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ—Å—Ç –∫–∞–∫ –Ω–∞ –æ–±—Ä–∞–∑—Ü–µ!
        """
        msk_tz = pytz.timezone('Europe/Moscow')
        timestamp = datetime.now(msk_tz).strftime("%d.%m.%Y %H:%M –ú–°–ö")
        msg = ""
        for block in sections:
            msg += f"{block['emoji']} <b>{block['title']}</b>\n"
            for item in block['entries']:
                msg += f"{item}\n"
            msg += "\n"
        msg += f"<i>–ö–∞–Ω–∞–ª —Å –≤—ã–∂–∏–º–∫–∞–º–∏: {channel_tag}</i>\n"
        msg += f"<i>{timestamp}</i>"
        return msg

    def send_to_telegram(self, message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
        try:
            data = {
                "chat_id": self.telegram_chat_id,
                "text": message,
                "parse_mode": "HTML",
                "disable_web_page_preview": True
            }
            response = requests.post(self.telegram_url, data=data, timeout=10)
            response.raise_for_status()
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {str(e)}")
            return False

def demo():
    # –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
    sections = [
        {
            "emoji": "‚öîÔ∏èüá∫üá¶",
            "title": "–ö–æ–Ω—Ñ–ª–∏–∫—Ç –†–æ—Å—Å–∏–∏ –∏ –£–∫—Ä–∞–∏–Ω—ã",
            "entries": [
                "- –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π –¥—Ä–æ–Ω –∞—Ç–∞–∫–æ–≤–∞–ª –º–∏–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å –≤ –ë—Ä—è–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏, –ø–æ–≥–∏–± —á–µ–ª–æ–≤–µ–∫.",
                "- –õ–∞–≤—Ä–æ–≤ –∑–∞—è–≤–∏–ª –æ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–µ –ø–æ–∑–∏—Ü–∏–∏ –°–®–ê –ø–æ –£–∫—Ä–∞–∏–Ω–µ.",
                "- –¢—Ä–∞–º–ø –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Ä–∞–∫–µ—Ç—ã ¬´–ë—É—Ä–µ–≤–µ—Å—Ç–Ω–∏–∫¬ª –≤ –†–æ—Å—Å–∏–∏.",
                "- –†–æ—Å—Å–∏–π—Å–∫–∏–µ –≤–æ–π—Å–∫–∞ –æ—Å–≤–æ–±–æ–¥–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –≤ –£–∫—Ä–∞–∏–Ω–µ."
            ]
        },
        {
            "emoji": "üá∑üá∫‚öñÔ∏è",
            "title": "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–µ–ª–∞ –†–æ—Å—Å–∏–∏",
            "entries": [
                "- –í –ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ –∑–∞–¥–µ—Ä–∂–∞–Ω—ã –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–µ –≤ –ø–æ—Ö–∏—â–µ–Ω–∏–∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è.",
                "- –ü–æ–ª–∏—Ü–∏—è –∑–∞–∫—Ä—ã–ª–∞ –º–∞–π–Ω–∏–Ω–≥-—Ñ–µ—Ä–º—É –≤ –õ–µ–Ω–æ–±–ª–∞—Å—Ç–∏ –∏–∑-–∑–∞ –∫—Ä–∞–∂–∏ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏.",
                "- –°—É–¥ –ú–æ—Å–∫–≤—ã –∑–∞–æ—á–Ω–æ –∞—Ä–µ—Å—Ç–æ–≤–∞–ª –ø–µ–≤–∏—Ü—É –ú–æ–Ω–µ—Ç–æ—á–∫—É –ø–æ –¥–µ–ª—É –æ–± –∏–Ω–æ–∞–≥–µ–Ω—Ç–∞—Ö.",
                "- –ì–ª–∞–≤—Ä–µ–¥–∞ ¬´–í–∞–∂–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π¬ª –∑–∞–æ—á–Ω–æ –ø—Ä–∏–≥–æ–≤–æ—Ä–∏–ª–∏ –∫ obliged–∏—Ç–µ–ª—å–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º."
            ]
        },
        {
            "emoji": "üåçüåê",
            "title": "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            "entries": [
                "- –õ–∏—Ç–≤–∞ –∑–∞–∫—Ä—ã–ª–∞ –≥—Ä–∞–Ω–∏—Ü—É —Å –ë–µ–ª–∞—Ä—É—Å—å—é –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫.",
                "- –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π —Å—É–¥ –ø–æ—Å—Ç–∞–Ω–æ–≤–∏–ª –≤—ã–¥–∞—Ç—å –ì–µ—Ä–º–∞–Ω–∏—é —É–∫—Ä–∞–∏–Ω—Ü–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞.",
                "- –°—É–¥ –ø—Ä–∏–Ω—è–ª –∑–∞–∫–æ–Ω –æ –¥–µ–Ω–æ–Ω—Å–∞—Ü–∏–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —Å –°–®–ê –ø–æ –ø–ª—É—Ç–æ–Ω—É.",
                "- –ü—É—Ç–∏–Ω –ø–æ–¥–ø–∏—Å–∞–ª –∑–∞–∫–æ–Ω –æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–µ —Å –í–µ–Ω–µ—Å—É—ç–ª–æ–π."
            ]
        }
    ]
    bot = NewsBot(TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID)
    msg = bot.format_telegram_message(sections)
    bot.send_to_telegram(msg)

if __name__ == "__main__":
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        print("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã TELEGRAM_BOT_TOKEN/CHAT_ID")
        exit(1)
    demo()
